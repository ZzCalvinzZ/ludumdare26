// Generated by CoffeeScript 1.6.2
(function() {
  var setupWorld;

  goog.provide('game');

  goog.require('lime.Director');

  goog.require('lime.Scene');

  goog.require('lime.Layer');

  goog.require('lime.Circle');

  goog.require('lime.Label');

  goog.require('lime.animation.Spawn');

  goog.require('lime.animation.FadeTo');

  goog.require('lime.animation.ScaleTo');

  goog.require('lime.animation.MoveTo');

  goog.require('lime.transitions.SlideInRight');

  goog.require('lime.transitions.Dissolve');

  goog.require('box2d.BodyDef');

  goog.require('box2d.BoxDef');

  goog.require('box2d.CircleDef');

  goog.require('box2d.CircleShape');

  goog.require('box2d.PolyDef');

  goog.require('box2d.Vec2');

  goog.require('box2d.JointDef');

  goog.require('box2d.MouseJointDef');

  goog.require('box2d.World');

  goog.require('game.TitleScreen');

  goog.require('game.GameScene');

  goog.require('game.Player');

  goog.require('game.Object');

  goog.require('game.Bottom');

  game.worldObjects = [];

  game.start = function() {
    game.director = new lime.Director(document.body, 1024, 768);
    game.world = setupWorld();
    game.titleScreen();
    return lime.scheduleManager.schedule(function(dt) {
      var item, _i, _len, _ref, _results;

      game.world.Step(dt / 1000, 3);
      _ref = game.worldObjects;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        item = _ref[_i];
        _results.push(item.updateFromBody());
      }
      return _results;
    });
  };

  setupWorld = function() {
    var bounds, gravity;

    gravity = new box2d.Vec2(0, 200);
    bounds = new box2d.AABB();
    bounds.minVertex.Set(-1024, -768);
    bounds.maxVertex.Set(2 * 1024, 2 * 768);
    return new box2d.World(bounds, gravity, true);
  };

  game.switchScene = function(sceneContents, transition, duration) {
    var layer, scene;

    scene = new lime.Scene();
    layer = new lime.Layer();
    scene.appendChild(layer);
    layer.appendChild(sceneContents);
    return game.director.replaceScene(scene, transition, duration);
  };

  game.titleScreen = function() {
    return game.switchScene(new game.TitleScreen(), lime.transitions.Dissolve, .5);
  };

  game.startGame = function(mode) {
    var circle, scene;

    scene = new game.GameScene();
    game.switchScene(scene, lime.transitions.SlideInRight, 1);
    circle = new game.Object({
      x: 200,
      y: 600,
      width: 900,
      height: 30
    });
    circle._shape.setFill(155, 155, 155);
    scene.appendChild(circle._shape);
    return game.worldObjects.push(circle);
  };

  goog.exportSymbol('game.start', game.start);

}).call(this);
